name: aws-fuzz-test

on:
  workflow_dispatch:
  workflow_call:

jobs:
  fuzz-build:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04

    steps:
      - uses: actions/checkout@v3

      - name: Pre-build
        run: |
          apt update && apt install -y sudo python3 git clang-tools cmake make automake libtool gettext pkg-config build-essential clang-10 zlib1g-dev libbz2-dev ninja-build liblzma-dev autoconf libsnappy-dev libzstd-dev liblz4-dev binutils m4 g++-10 unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
      
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2

      - name: fuzbuild
        run: |
           #repo="${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}"
           #echo repo $repo
           #git remote add origin $repo
           echo "test"
           pwd
           echo 'git clone https://github.com/google/libprotobuf-mutator.git \n
             cd libprotobuf-mutator \n
             git checkout ffd86a32874e5c08a143019aad1aaf0907294c9f \n
             cd .. \n
             export CC=clang && export CXX=clang++ && mkdir LPM && cd LPM \n
             ln -s /usr/lib/x86_64-linux-gnu/libstdc++.so.6 /usr/lib/x86_64-linux-gnu/libstdc++.so \n
             ln -s /usr/bin/clang-10 /usr/bin/clang \n
             ln -s /usr/bin/clang++-10 /usr/bin/clang++ \n
             cmake ../libprotobuf-mutator -GNinja -DLIB_PROTO_MUTATOR_DOWNLOAD_PROTOBUF=ON -DLIB_PROTO_MUTATOR_TESTING=OFF -DCMAKE_BUILD_TYPE=Release \n
             ninja \n
             ninja install \n
             export PKG_CONFIG_PATH=$PWD:$PWD/external.protobuf/lib/pkgconfig/ \n
             export PATH=$PWD/external.protobuf/bin:$PATH \n
             cd $GITHUB_WORKSPACE \n
             git fetch \n
             git checkout master \n
             COMPILE_WITH_ASAN=1 make -j2 static_lib \n
             cd $GITHUB_WORKSPACE/fuzz \n
             make db_map_fuzzer \n
             make db_fuzzer \n
             ls -alFh $GITHUB_WORKSPACE/fuzz/ \n
             echo ASAN_OPTIONS=detect_leaks=0 ./db_fuzzer \n' > prepfuz.sh
           cat prepfuz.sh     
           chmod +x prepfuz.sh
           bash -xv prepfuz.sh
         
      - name: Copy db_map_fuzzer to S3
        run: |
          aws s3 cp $GITHUB_WORKSPACE/fuzz/db_map_fuzzer s3://spdb-github-ci/
     
      - name: Copy db_fuzzer to S3
        run: |
          aws s3 cp $GITHUB_WORKSPACE/fuzz/db_fuzzer s3://spdb-github-ci/
         
#       - name: Upload db_map_fuzzer Artifact
#         uses: actions/upload-artifact@v3.1.0
#         with:
#           name: db_map_fuzzer
#           path: |
#              ${{ github.workspace }}/fuzz/db_map_fuzzer
#           retention-days: 1
             
#       - name: Upload db_fuzzer Artifact
#         uses: actions/upload-artifact@v3.1.0
#         with:
#           name: db_fuzzer
#           path: |
#              ${{ github.workspace }}/fuzz/db_fuzzer
#           retention-days: 1
             
             
  db_fuzzer:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    continue-on-error: true
    needs: [fuzz-build]
      
    steps:
      - uses: actions/checkout@v3
            
#       - name: Download a Build Artifact
#         uses: actions/download-artifact@v3.0.0
#         with:
#           name: db_fuzzer
#           path: ${{ github.workspace }}/fuzz/db_fuzzer

      - name: Pre-build
        run: |
          apt update && apt install -y libtool sudo gettext pkg-config libsnappy-dev libzstd-dev liblz4-dev binutils m4 unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          mkdir -p $GITHUB_WORKSPACE/out
          
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          
      - name: download db_fuzzer from s3
        run: |
          if [ ! -d $GITHUB_WORKSPACE/fuzz/ ]; then
            mkdir -p $GITHUB_WORKSPACE/fuzz/
          fi
          aws s3 cp s3://spdb-github-ci/db_fuzzer $GITHUB_WORKSPACE/fuzz/db_fuzzer
          ls -alFh $GITHUB_WORKSPACE/fuzz

      - name: dbfuzzer
        run: |
          ls -l $GITHUB_WORKSPACE/out
          ls -alFh $GITHUB_WORKSPACE/fuzz
          sudo chown -R $USER:$USER "$GITHUB_WORKSPACE"
          sudo chown $USER:$USER "$GITHUB_WORKSPACE/fuzz/db_fuzzer"
          chmod 777 $GITHUB_WORKSPACE/fuzz/db_fuzzer
          whoami
          ls -alFh $GITHUB_WORKSPACE/fuzz
          ASAN_OPTIONS=detect_odr_violation=0 $GITHUB_WORKSPACE/fuzz/db_fuzzer 2>&1 | sudo tee $GITHUB_WORKSPACE/out/db_fuzzer.log 
          ls -l $GITHUB_WORKSPACE/out/
          
      - name: Copy logs to s3
        run: |
          aws s3 cp $GITHUB_WORKSPACE/out/db_fuzzer.log s3://spdb-github-ci/
          
#       - name: Upload a Build Artifact
#         uses: actions/upload-artifact@v3.1.0
#         with:
#           path: ${{ github.workspace }}/out/db_fuzzer.log
#           retention-days: 1

  db_map_fuzzer:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    continue-on-error: true
    needs:  [fuzz-build]
    
    steps:
      - uses: actions/checkout@v3
            
#       - name: Download a Build Artifact
#         uses: actions/download-artifact@v3.0.0
#         with:
#           name: db_map_fuzzer
#           path: ${{ github.workspace }}/fuzz/db_map_fuzzer
      
      - name: Pre-build
        run: |
          apt update && apt install -y sudo libtool gettext pkg-config libsnappy-dev libzstd-dev liblz4-dev binutils m4 unzip
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          mkdir -p $GITHUB_WORKSPACE/out/
          
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
          
      - name: download db_map_fuzzer from s3
        run: |
          if [ ! -d $GITHUB_WORKSPACE/fuzz/ ]; then
            mkdir -p $GITHUB_WORKSPACE/fuzz/
          fi
          aws s3 cp s3://spdb-github-ci/db_map_fuzzer $GITHUB_WORKSPACE/fuzz/db_map_fuzzer
          ls -alFh $GITHUB_WORKSPACE/fuzz

          
      - name: dbmapfuzzer
        run: |
          ls -l $GITHUB_WORKSPACE/out/
          sudo chown -R $USER:$USER "$GITHUB_WORKSPACE"
          sudo chown $USER:$USER "$GITHUB_WORKSPACE/fuzz/db_map_fuzzer"
          chmod 777 $GITHUB_WORKSPACE/fuzz/db_map_fuzzer
          whoami
          ls -alFh $GITHUB_WORKSPACE/fuzz
          ASAN_OPTIONS=detect_odr_violation=0 $GITHUB_WORKSPACE/fuzz/db_map_fuzzer 2>&1 | tee $GITHUB_WORKSPACE/out/db_map_fuzzer.log 
      
      - name: Copy logs to s3
        run: |
          aws s3 cp $GITHUB_WORKSPACE/out/db_map_fuzzer.log s3://spdb-github-ci/
          
  fuzzer_sum:
    runs-on: ubuntu-latest
    container:
      image: ubuntu:18.04
    needs: [db_map_fuzzer, db_fuzzer]
      
    steps:
      - uses: actions/checkout@v3
      
      - name: pre
        run: |
          apt update && apt install -y sudo unzip curl
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip awscliv2.zip
          sudo ./aws/install
          
      - name: Configure AWS credentials from Test account
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      
      - name: download db_fuzzer.log from s3
        run: |
          mkdir -p $GITHUB_WORKSPACE/out
          aws s3 cp s3://spdb-github-ci/db_fuzzer.log $GITHUB_WORKSPACE/out/db_fuzzer.log || echo "db_fuzzer.log not found"
          ls -alFh $GITHUB_WORKSPACE/out
          
      - name: download db_map_fuzzer.log from s3
        run: |
          mkdir -p $GITHUB_WORKSPACE/out
          aws s3 cp s3://spdb-github-ci/db_map_fuzzer.log $GITHUB_WORKSPACE/out/db_map_fuzzer.log || echo "db_map_fuzzer.log not found"
          ls -alFh $GITHUB_WORKSPACE/out
      
#       - name: Download a Build Artifact
#         uses: actions/download-artifact@v3.0.0
#         with:
#           path: |
#             ${{ github.workspace }}/out/db_fuzzer.log
            
#       - name: Download a Build Artifact
#         uses: actions/download-artifact@v3.0.0
#         with:
#           path: |
#             ${{ github.workspace }}/out/db_map_fuzzer.log
      
      - name: fuzzersum
        run: |
          echo "~~~~ db_map_fuzzer LOGS ~~~~~"
          tail -20 $GITHUB_WORKSPACE/out/db_map_fuzzer.log | grep "==AddressSanitizer. Thread limit (4194304 threads) exceeded\. Dying\." || echo "skoot"
          echo "~~~~ db_fuzzer LOGS ~~~~~"
          tail -20 $GITHUB_WORKSPACE/out/db_fuzzer.log | grep "==AddressSanitizer. Thread limit (4194304 threads) exceeded\. Dying\." || echo "skid"
          
      - name: clear s3 bucket
        run: |
          mkdir -p $GITHUB_WORKSPACE/down
          aws s3 rm s3://spdb-github-ci/ --recursive --include "*"

